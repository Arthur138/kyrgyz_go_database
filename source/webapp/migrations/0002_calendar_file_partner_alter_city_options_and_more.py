# Generated by Django 4.1.7 on 2023-04-28 11:15

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import webapp.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('webapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=100, verbose_name='Название события')),
                ('event_city', models.CharField(max_length=50, verbose_name='Город проведения')),
                ('event_date', models.DateField(verbose_name='Дата проведения')),
                ('text', models.TextField(max_length=5000, verbose_name='Описание события')),
                ('calendar_image', models.ImageField(blank=True, null=True, upload_to='calendar_images', verbose_name='Изображение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удален')),
                ('deadline', models.DateField(verbose_name='Дата окончания регистрации')),
                ('author', models.ForeignKey(default=webapp.models.get_author, on_delete=models.SET(webapp.models.get_author), to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Событие',
                'verbose_name_plural': 'События',
                'permissions': (('view_deleted_events', 'can view list of deleted events'),),
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(null=True, upload_to='files/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['xml'], code='invalid_extension', message=['Загрузите файл в формате XML'])])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование партнера')),
                ('logo', models.ImageField(upload_to='partner_logo', verbose_name='Лого')),
                ('web_link', models.URLField(blank=True, null=True, verbose_name='Интернет-ссылка')),
            ],
            options={
                'verbose_name': 'Партнер',
                'verbose_name_plural': 'Партнеры',
                'db_table': 'partner',
            },
        ),
        migrations.AlterModelOptions(
            name='city',
            options={'verbose_name': 'Город', 'verbose_name_plural': 'Города'},
        ),
        migrations.AlterModelOptions(
            name='club',
            options={'verbose_name': 'Клуб', 'verbose_name_plural': 'Клубы'},
        ),
        migrations.AlterModelOptions(
            name='country',
            options={'verbose_name': 'Страна', 'verbose_name_plural': 'Страны'},
        ),
        migrations.AlterModelOptions(
            name='game',
            options={'verbose_name': 'Игра', 'verbose_name_plural': 'Игры'},
        ),
        migrations.AlterModelOptions(
            name='player',
            options={'verbose_name': 'Игрок', 'verbose_name_plural': 'Игроки'},
        ),
        migrations.AlterModelOptions(
            name='tournament',
            options={'verbose_name': 'Турнир', 'verbose_name_plural': 'Турниры'},
        ),
        migrations.RemoveField(
            model_name='player',
            name='EGF_placement',
        ),
        migrations.RemoveField(
            model_name='player',
            name='GoLevel',
        ),
        migrations.RemoveField(
            model_name='player',
            name='age',
        ),
        migrations.RemoveField(
            model_name='player',
            name='rating',
        ),
        migrations.AddField(
            model_name='club',
            name='address',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Address'),
        ),
        migrations.AddField(
            model_name='club',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.city'),
        ),
        migrations.AddField(
            model_name='club',
            name='coaches',
            field=models.ManyToManyField(related_name='clubs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='club',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.country'),
        ),
        migrations.AddField(
            model_name='club',
            name='logo',
            field=models.ImageField(blank=True, null=True, upload_to='club_logo', verbose_name='Лого'),
        ),
        migrations.AddField(
            model_name='club',
            name='num_players',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Количество участников клуба'),
        ),
        migrations.AddField(
            model_name='club',
            name='phonenumber',
            field=phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Номер телефона'),
        ),
        migrations.AddField(
            model_name='club',
            name='schedule',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Расписание'),
        ),
        migrations.AddField(
            model_name='club',
            name='web_link',
            field=models.URLField(blank=True, null=True, verbose_name='Интернет-ссылка'),
        ),
        migrations.AddField(
            model_name='game',
            name='black_gor_change',
            field=models.FloatField(blank=True, null=True, verbose_name='Black GoR change'),
        ),
        migrations.AddField(
            model_name='game',
            name='white_gor_change',
            field=models.FloatField(blank=True, null=True, verbose_name='White GoR change'),
        ),
        migrations.AddField(
            model_name='player',
            name='EgdPin',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='EgdPin'),
        ),
        migrations.AddField(
            model_name='player',
            name='avatar',
            field=models.ImageField(blank=True, null=True, upload_to='user_avatar', verbose_name='Аватар'),
        ),
        migrations.AddField(
            model_name='player',
            name='birth_date',
            field=models.DateField(blank=True, null=True, verbose_name='Дата рождения'),
        ),
        migrations.AddField(
            model_name='player',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.city'),
        ),
        migrations.AddField(
            model_name='player',
            name='current_rank',
            field=models.CharField(blank=True, default='0k', max_length=3, null=True, verbose_name='GoLevel'),
        ),
        migrations.AddField(
            model_name='player',
            name='current_rating',
            field=models.IntegerField(blank=True, default=0, null=True, verbose_name='Rating'),
        ),
        migrations.AddField(
            model_name='player',
            name='tournaments',
            field=models.ManyToManyField(through='webapp.PlayerInTournament', to='webapp.tournament'),
        ),
        migrations.AddField(
            model_name='playerintournament',
            name='GoLevel',
            field=models.CharField(default='10k', max_length=3, verbose_name='GoLevel'),
        ),
        migrations.AddField(
            model_name='playerintournament',
            name='GoLevel_after',
            field=models.CharField(blank=True, max_length=3, null=True, verbose_name='GoLevel'),
        ),
        migrations.AddField(
            model_name='playerintournament',
            name='club',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.club'),
        ),
        migrations.AddField(
            model_name='playerintournament',
            name='position',
            field=models.PositiveIntegerField(default=0, verbose_name='Позиция/место'),
        ),
        migrations.AddField(
            model_name='playerintournament',
            name='rating',
            field=models.IntegerField(blank=True, null=True, verbose_name='Rating'),
        ),
        migrations.AddField(
            model_name='playerintournament',
            name='rating_after',
            field=models.IntegerField(blank=True, null=True, verbose_name='Rating after'),
        ),
        migrations.AddField(
            model_name='playerintournament',
            name='results',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='results by round'),
        ),
        migrations.AddField(
            model_name='tournament',
            name='date',
            field=models.DateField(blank=True, null=True, verbose_name='Date'),
        ),
        migrations.AddField(
            model_name='tournament',
            name='location',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Место проведения'),
        ),
        migrations.AddField(
            model_name='tournament',
            name='regulations',
            field=models.TextField(blank=True, null=True, verbose_name='Regulations'),
        ),
        migrations.AddField(
            model_name='tournament',
            name='tournament_class',
            field=models.CharField(blank=True, choices=[('all', 'Все классы'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default='all', max_length=20, null=True, verbose_name='Class'),
        ),
        migrations.AddField(
            model_name='tournament',
            name='uploaded_by',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL, verbose_name='Автор'),
        ),
        migrations.AlterField(
            model_name='city',
            name='city',
            field=models.CharField(max_length=50, verbose_name='Город'),
        ),
        migrations.AlterField(
            model_name='game',
            name='black_score',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Black score'),
        ),
        migrations.AlterField(
            model_name='game',
            name='white_score',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='White score'),
        ),
        migrations.AlterField(
            model_name='player',
            name='clubs',
            field=models.ManyToManyField(blank=True, related_name='players', to='webapp.club'),
        ),
        migrations.AlterField(
            model_name='player',
            name='first_name',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Имя'),
        ),
        migrations.AlterField(
            model_name='player',
            name='last_name',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Фамилия'),
        ),
        migrations.AlterField(
            model_name='playerintournament',
            name='game_id',
            field=models.PositiveIntegerField(verbose_name='ID in tournament(id_in_tournament)'),
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Регион')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.country')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
            },
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=400, verbose_name='Рекомендация')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='author', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player', to='webapp.player', verbose_name='Игрок')),
            ],
            options={
                'verbose_name': 'Рекомендация',
                'verbose_name_plural': 'Рекомендации',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Имя')),
                ('surname', models.CharField(max_length=20, verbose_name='Фамилия')),
                ('rank', models.CharField(max_length=3, verbose_name='GoLevel')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='Город')),
                ('phonenumber', phonenumber_field.modelfields.PhoneNumberField(default=None, max_length=16, null=True, region=None, verbose_name='Номер телефона')),
                ('status', models.CharField(choices=[('Confirmed', 'Confirmed'), ('Not confirmed', 'Not confirmed')], default='Not confirmed', max_length=50, verbose_name='Статус')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participant', to='webapp.calendar')),
            ],
            options={
                'verbose_name': 'Участник',
                'verbose_name_plural': 'Участники',
                'db_table': 'participant',
            },
        ),
        migrations.CreateModel(
            name='NotModeratedTournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Tournament name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date of upload')),
                ('uploaded_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL, verbose_name='Uploaded by')),
            ],
            options={
                'verbose_name': 'TournamentForModeration',
                'verbose_name_plural': 'TournamentsForModeration',
                'db_table': 'moderation',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок новости')),
                ('text', models.TextField(max_length=5000, verbose_name='Текст новости')),
                ('news_image', models.ImageField(blank=True, null=True, upload_to='news_images', verbose_name='Изображение')),
                ('video_link', models.URLField(blank=True, null=True, verbose_name='Ссылка на видео')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удален')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='news', to=settings.AUTH_USER_MODEL, verbose_name='Автор новости')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
                'permissions': (('view_deleted_news', 'can view list of deleted news'),),
            },
        ),
        migrations.AddField(
            model_name='city',
            name='region',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='webapp.region'),
        ),
        migrations.AddField(
            model_name='club',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.region'),
        ),
        migrations.AddField(
            model_name='tournament',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.region'),
        ),
    ]
