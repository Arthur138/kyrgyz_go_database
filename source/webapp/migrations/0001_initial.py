# Generated by Django 4.1.7 on 2023-04-28 14:34

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import webapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=100, verbose_name='Название события')),
                ('event_city', models.CharField(max_length=50, verbose_name='Город проведения')),
                ('event_date', models.DateField(verbose_name='Дата проведения')),
                ('text', models.TextField(max_length=5000, verbose_name='Описание события')),
                ('calendar_image', models.ImageField(blank=True, null=True, upload_to='calendar_images', verbose_name='Изображение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удален')),
                ('deadline', models.DateField(verbose_name='Дата окончания регистрации')),
                ('author', models.ForeignKey(default=webapp.models.get_author, on_delete=models.SET(webapp.models.get_author), to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Событие',
                'verbose_name_plural': 'События',
                'permissions': (('view_deleted_events', 'can view list of deleted events'),),
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(default=1, max_length=50, verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='club_logo', verbose_name='Лого')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Club title')),
                ('EGDName', models.CharField(blank=True, max_length=6, null=True, verbose_name='EGDName')),
                ('num_players', models.PositiveIntegerField(blank=True, null=True, verbose_name='Количество участников клуба')),
                ('address', models.CharField(blank=True, max_length=50, null=True, verbose_name='Address')),
                ('phonenumber', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Номер телефона')),
                ('web_link', models.URLField(blank=True, null=True, verbose_name='Интернет-ссылка')),
                ('schedule', models.CharField(blank=True, max_length=100, null=True, verbose_name='Расписание')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.city')),
                ('coaches', models.ManyToManyField(related_name='clubs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Клуб',
                'verbose_name_plural': 'Клубы',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code', models.CharField(max_length=2, verbose_name='Country')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(null=True, upload_to='files/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['xml'], code='invalid_extension', message=['Загрузите файл в формате XML'])])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование партнера')),
                ('logo', models.ImageField(upload_to='partner_logo', verbose_name='Лого')),
                ('web_link', models.URLField(blank=True, null=True, verbose_name='Интернет-ссылка')),
            ],
            options={
                'verbose_name': 'Партнер',
                'verbose_name_plural': 'Партнеры',
                'db_table': 'partner',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='user_avatar', verbose_name='Аватар')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Фамилия')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('current_rank', models.CharField(blank=True, default='0k', max_length=3, null=True, verbose_name='GoLevel')),
                ('current_rating', models.IntegerField(blank=True, default=0, null=True, verbose_name='Rating')),
                ('EgdPin', models.PositiveIntegerField(blank=True, null=True, verbose_name='EgdPin')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.city')),
                ('clubs', models.ManyToManyField(blank=True, related_name='players', to='webapp.club')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.country')),
            ],
            options={
                'verbose_name': 'Игрок',
                'verbose_name_plural': 'Игроки',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Регион')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.country')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tournament name')),
                ('location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Место проведения')),
                ('board_size', models.PositiveIntegerField(default=19, verbose_name='Board size')),
                ('rounds', models.PositiveIntegerField(verbose_name='Total rounds')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('tournament_class', models.CharField(blank=True, choices=[('all', 'Все классы'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default='all', max_length=20, null=True, verbose_name='Class')),
                ('regulations', models.TextField(blank=True, null=True, verbose_name='Regulations')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.city')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.region')),
                ('uploaded_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Турнир',
                'verbose_name_plural': 'Турниры',
            },
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=400, verbose_name='Рекомендация')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='author', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player', to='webapp.player', verbose_name='Игрок')),
            ],
            options={
                'verbose_name': 'Рекомендация',
                'verbose_name_plural': 'Рекомендации',
            },
        ),
        migrations.CreateModel(
            name='PlayerInTournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_id', models.PositiveIntegerField(verbose_name='ID in tournament(id_in_tournament)')),
                ('GoLevel', models.CharField(default='10k', max_length=3, verbose_name='GoLevel')),
                ('GoLevel_after', models.CharField(blank=True, max_length=3, null=True, verbose_name='GoLevel')),
                ('rating', models.IntegerField(blank=True, null=True, verbose_name='Rating')),
                ('rating_after', models.IntegerField(blank=True, null=True, verbose_name='Rating after')),
                ('position', models.PositiveIntegerField(default=0, verbose_name='Позиция/место')),
                ('results', models.CharField(blank=True, max_length=200, null=True, verbose_name='results by round')),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.club')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.player')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.tournament')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='tournaments',
            field=models.ManyToManyField(through='webapp.PlayerInTournament', to='webapp.tournament'),
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Имя')),
                ('surname', models.CharField(max_length=20, verbose_name='Фамилия')),
                ('rank', models.CharField(max_length=3, verbose_name='GoLevel')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='Город')),
                ('phonenumber', phonenumber_field.modelfields.PhoneNumberField(default=None, max_length=16, null=True, region=None, verbose_name='Номер телефона')),
                ('status', models.CharField(choices=[('Confirmed', 'Confirmed'), ('Not confirmed', 'Not confirmed')], default='Not confirmed', max_length=50, verbose_name='Статус')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participant', to='webapp.calendar')),
            ],
            options={
                'verbose_name': 'Участник',
                'verbose_name_plural': 'Участники',
                'db_table': 'participant',
            },
        ),
        migrations.CreateModel(
            name='NotModeratedTournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Tournament name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date of upload')),
                ('uploaded_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL, verbose_name='Uploaded by')),
            ],
            options={
                'verbose_name': 'TournamentForModeration',
                'verbose_name_plural': 'TournamentsForModeration',
                'db_table': 'moderation',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок новости')),
                ('text', models.TextField(max_length=5000, verbose_name='Текст новости')),
                ('news_image', models.ImageField(blank=True, null=True, upload_to='news_images', verbose_name='Изображение')),
                ('video_link', models.URLField(blank=True, null=True, verbose_name='Ссылка на видео')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удален')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='news', to=settings.AUTH_USER_MODEL, verbose_name='Автор новости')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
                'permissions': (('view_deleted_news', 'can view list of deleted news'),),
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.CharField(blank=True, max_length=10, null=True, verbose_name='Result')),
                ('black_score', models.PositiveIntegerField(blank=True, null=True, verbose_name='Black score')),
                ('white_score', models.PositiveIntegerField(blank=True, null=True, verbose_name='White score')),
                ('board_number', models.PositiveIntegerField(default=0, verbose_name='BoardNumber')),
                ('date', models.DateTimeField(verbose_name='Date')),
                ('round_num', models.PositiveIntegerField(verbose_name='Round')),
                ('black_gor_change', models.FloatField(blank=True, null=True, verbose_name='Black GoR change')),
                ('white_gor_change', models.FloatField(blank=True, null=True, verbose_name='White GoR change')),
                ('black', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='black_player', to='webapp.player')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.tournament')),
                ('white', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='white_player', to='webapp.player')),
            ],
            options={
                'verbose_name': 'Игра',
                'verbose_name_plural': 'Игры',
            },
        ),
        migrations.AddField(
            model_name='club',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.country'),
        ),
        migrations.AddField(
            model_name='club',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.region'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.country'),
        ),
        migrations.AddField(
            model_name='city',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.region'),
        ),
    ]
